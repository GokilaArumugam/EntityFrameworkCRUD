@model EntityFramework_DemoProject.Models.Register
@{
    ViewBag.Title = "SignUp";
    Layout = null;
}
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <link href="~/Content/fontawesome.min.css" rel="stylesheet" />
    <link href="~/Content/regular.min.css" rel="stylesheet" />
    <link href="~/Content/solid.min.css" rel="stylesheet" />
    <style>
        .signup-container {
            margin: 0 auto;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 5px;
            background-color: #D3C0CD;
        }
        p{
            font-weight:bold;
        }

        sup {
            color: #f00;
            font-weight: bolder;
        }

        label {
            font-weight: bold;
        }

        small {
            color: #f00;
            font-weight: bolder;
        }
    </style>
</head>
<div class="signup-container w-75 container-fluid my-5">
    <h3 class="text-center">
        Welcome!!
        Create Account Here!
    </h3>
    @using (Html.BeginForm("SignUp", "Users", FormMethod.Post, new { @class = "registration-form" }))
    {
        @Html.AntiForgeryToken()

        <div class="row mb-1">
            <div class="col-sm-12 col-md-6 col-xl-6">
                <div class="form-group mt-3 ">
                    @Html.LabelFor(m =>m.Name, new { @class = "form-label" })
                    <sup>*</sup>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-user"></i></span>
                        @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <small>
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </small>
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-xl-6">
                <div class="form-group mt-3">
                    @Html.LabelFor(m => m.Gender, new { @class = "form-label" })
                    <sup>*</sup>
                    <div>
                        @Html.RadioButtonFor(m => m.Gender, "Male", new { @class = "form-check-input me-1" })
                        @Html.Label("Male", new { @class = "form-check-label me-1" })
                        @Html.RadioButtonFor(m => m.Gender, "Female", new { @class = "form-check-input me-1" })
                        @Html.Label("Female", new { @class = "form-check-label me-1" })
                        @Html.RadioButtonFor(m => m.Gender, "Others", new { @class = "form-check-input me-1" })
                        @Html.Label("Others", new { @class = "form-check-label me-1" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row mb-1">
            <div class="col-sm-12 col-md-6 col-xl-6">
                <div class="form-group mt-2">
                    @Html.LabelFor(m => m.Age, new { @class = "form-label" })
                    <sup>*</sup>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                        @Html.EditorFor(m => m.Age, "", new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <small>
                        @Html.ValidationMessageFor(m => m.Age, "", new { htmlattribute = new { @class = "text-danger" } })
                    </small>
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-xl-6">
                <div class="form-group mt-2">
                    @Html.LabelFor(m => m.Address, new { @class = "form-label" })
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-location-arrow"></i></span>
                        @Html.TextAreaFor(m => m.Address, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row mb-1">
            <div class="col-sm-12 col-md-6 col-xl-6">
                <div class="form-group mt-2">
                    @Html.LabelFor(m => m.MobileNo, new { @class = "form-label" });
                    <sup>*</sup>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-phone-alt"></i></span>
                        @Html.EditorFor(m => m.MobileNo, "", new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <small>
                        @Html.ValidationMessageFor(m => m.MobileNo, "", new { htmlattribute = new { @class = "text-danger" } })
                    </small>
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-xl-6">
                <div class="form-group mt-2">
                    @Html.LabelFor(m => m.Email_ID, new { @class = "form-label" })
                    <sup>*</sup>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                        @Html.EditorFor(m => m.Email_ID, "", new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <small>
                        @Html.ValidationMessageFor(m => m.Email_ID, "", new { htmlAttributes = new { @class = "text-danger" } })
                    </small>
                </div>
            </div>
        </div>
        <div class="row mb-1">
            <div class="col-sm-12 col-md-6 col-xl-6">
                <div class="form-group mt-2">
                    @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                    <sup>*</sup>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-key"></i></span>
                        @Html.EditorFor(m => m.Password, "", new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <small>
                        @Html.ValidationMessageFor(m => m.Password, "", new { htmlAttributes = new { @class = "text-danger" } })
                    </small>
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-xl-6">
                <div class="form-group mt-2">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "form-label" })
                    <sup>*</sup>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-key"></i></span>
                        @Html.EditorFor(m => m.ConfirmPassword, "", new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <small>
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { htmlattribute = new { @class = "text-danger" } })
                    </small>
                </div>
            </div>
        </div>
        <div class="mt-3  text-center">
            <button type="submit" class="btn-success btn">Register</button>
        </div>
        <div class="text-center">
            @Html.ActionLink("Already have an account?Login", "SignIn", "Users", new { @class = "nav-link" })
        </div>
        <div>
            <p class="text-success">@TempData["Success"]</p>
            <p class="text-danger">@TempData["Error"]</p>
        </div>
    }
</div>

@if (TempData["Error"] != null)
{
    <span class="d-none" id="error-message">@TempData["Error"]</span>
}
@if (TempData["Success"] != null)
{
    <span class="d-none" id="success-message">@TempData["Success"]</span>
}
<script src="~/Scripts/toastr.min.js"></script>
<script>
    $(function () {
        toastr.option = {
            closeButton: true,
            positionClass: "toastr-top-center"
        }
        var errormessage = $("#error-message").text();
        if (errormessage != '') {
            toastr.error(errormessage);
        }
        var successmessage = $("#success-message").text();
        if (successmessage != '') {
            toastr.success(successmessage);
        }
    });
</script>
